/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KittyPartyWinnerDistributeEqual,
  KittyPartyWinnerDistributeEqualInterface,
} from "../KittyPartyWinnerDistributeEqual";

const _abi = [
  {
    inputs: [],
    name: "getLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "getWinnerAtLocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinners",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numberOfKittens",
        type: "uint256",
      },
    ],
    name: "initiateCheckWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "prevWinnerIndexes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winnerIndexes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerStrategy",
    outputs: [
      {
        internalType: "enum KittyPartyWinnerSelectionOptions.WinningStrategy",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916600217905534801561001d57600080fd5b506103678061002d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638a999b441161005b5780638a999b44146100d7578063be1c766b146100ea578063cd843b77146100f2578063df15c37e1461010557600080fd5b80631d485ea61461008257806366ea5f57146100a85780636f714625146100bd575b600080fd5b61009561009036600461026d565b61011a565b6040519081526020015b60405180910390f35b6100bb6100b636600461026d565b61013b565b005b6000546100ca9060ff1681565b60405161009f9190610286565b6100956100e536600461026d565b6101a4565b600254610095565b61009561010036600461026d565b6101cb565b61010d6101db565b60405161009f91906102ae565b6003818154811061012a57600080fd5b600091825260209091200154905081565b61014760026000610233565b600181905560005b6001548110156101a057600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0181905580610198816102f2565b91505061014f565b5050565b6000600282815481106101b9576101b961031b565b90600052602060002001549050919050565b6002818154811061012a57600080fd5b6060600280548060200260200160405190810160405280929190818152602001828054801561022957602002820191906000526020600020905b815481526020019060010190808311610215575b5050505050905090565b50805460008255906000526020600020908101906102519190610254565b50565b5b808211156102695760008155600101610255565b5090565b60006020828403121561027f57600080fd5b5035919050565b60208101600583106102a857634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252825182820181905260009190848201906040850190845b818110156102e6578351835292840192918401916001016102ca565b50909695505050505050565b600060001982141561031457634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212200d165e13fc9b940e026b0d8fde48c442cd74b310f2ecd4551d6f723eaad3c5ad64736f6c634300080a0033";

type KittyPartyWinnerDistributeEqualConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KittyPartyWinnerDistributeEqualConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KittyPartyWinnerDistributeEqual__factory extends ContractFactory {
  constructor(...args: KittyPartyWinnerDistributeEqualConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KittyPartyWinnerDistributeEqual> {
    return super.deploy(
      overrides || {}
    ) as Promise<KittyPartyWinnerDistributeEqual>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KittyPartyWinnerDistributeEqual {
    return super.attach(address) as KittyPartyWinnerDistributeEqual;
  }
  connect(signer: Signer): KittyPartyWinnerDistributeEqual__factory {
    return super.connect(signer) as KittyPartyWinnerDistributeEqual__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KittyPartyWinnerDistributeEqualInterface {
    return new utils.Interface(
      _abi
    ) as KittyPartyWinnerDistributeEqualInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KittyPartyWinnerDistributeEqual {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as KittyPartyWinnerDistributeEqual;
  }
}
