/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KittyPartyFactory,
  KittyPartyFactoryInterface,
} from "../KittyPartyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "FactoryInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "kreator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "kitty",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "kittyPartyName",
        type: "bytes32",
      },
    ],
    name: "KittyLive",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "kreatorFeesInBasisPoints",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "daoFeesInBasisPoints",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "winningStrategy",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "timeToCollection",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "maxKittens",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "durationInDays",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "amountInDAIPerRound",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "partyName",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "daiAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "winnerStrategy",
            type: "address",
          },
        ],
        internalType: "struct IKittenPartyInit.KittyInitiator",
        name: "_kittyInitiator",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sellTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "lpTokenAddress",
            type: "address",
          },
        ],
        internalType: "struct IKittenPartyInit.KittyYieldArgs",
        name: "_kittyYieldArgs",
        type: "tuple",
      },
    ],
    name: "createKitty",
    outputs: [
      {
        internalType: "address",
        name: "kittyAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "daoAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daoFeesInBasisPoints",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidateAddress",
        type: "address",
      },
    ],
    name: "getMyKitties",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_daoAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kpFactory",
    outputs: [
      {
        internalType: "address",
        name: "tomCatContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "accountantContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "litterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "daoTreasuryContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeperContractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kreatorFeesInBasisPoints",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "myKitties",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "myStrategies",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "setApprovedStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_daoFeesInBasisPoints",
        type: "uint8",
      },
    ],
    name: "setDAOFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tomCatContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "accountantContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "litterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoTreasuryContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeperContractAddress",
            type: "address",
          },
        ],
        internalType: "struct IKittenPartyInit.KittyPartyFactoryArgs",
        name: "_kpFactory",
        type: "tuple",
      },
    ],
    name: "setFactoryInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_kreatorFeesInBasisPoints",
        type: "uint8",
      },
    ],
    name: "setKreatorFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112e8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063890e93851161008c578063a42ae7aa11610066578063a42ae7aa1461020f578063a4c378fd14610222578063c4d66de814610235578063cba93f6d1461024857600080fd5b8063890e9385146101c95780638efb8293146101dc5780639c6854c6146101ef57600080fd5b80632131c68c146100d4578063265a3d5d1461010a578063300b70061461011f5780633734919814610132578063490d94ce1461015157806378c9fc4f14610163575b600080fd5b6008546100ed906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61011d610118366004610e90565b61027b565b005b61011d61012d366004610ec3565b6102bc565b60085461013f9060ff1681565b60405160ff9091168152602001610101565b60085461013f90610100900460ff1681565b60015460025460035460045460055461018f946001600160a01b03908116948116938116928116911685565b604080516001600160a01b03968716815294861660208601529285169284019290925283166060830152909116608082015260a001610101565b6100ed6101d7366004610ede565b6102ef565b6100ed6101ea366004610f08565b610327565b6102026101fd366004610e90565b610b87565b6040516101019190610f4f565b61011d61021d366004610f9c565b610bfd565b61011d610230366004610ec3565b610cb6565b61011d610243366004610e90565b610cef565b61026b610256366004610e90565b60076020526000908152604090205460ff1681565b6040519015158152602001610101565b6008546201000090046001600160a01b0316331461029857600080fd5b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b6008546201000090046001600160a01b031633146102d957600080fd5b6008805460ff191660ff92909216919091179055565b6006602052816000526040600020818154811061030b57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546000908190610341906001600160a01b0316610ddc565b9050600061035761012086016101008701610e90565b604051636eb1769f60e11b81523360048201523060248201529091506000906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190611038565b905060006103e4670de0b6b3a7640000620f4240611051565b8760c00135101561041c57610403670de0b6b3a76400006103e8611051565b8760c00135101561041557600161041f565b600261041f565b60035b60ff1690506007600061043a6101408a016101208b01610e90565b6001600160a01b0316815260208101919091526040016000205460ff1615156001146104a55760405162461bcd60e51b815260206004820152601560248201527414dd1c985d1959de481b9bdd08185c1c1c9bdd9959605a1b60448201526064015b60405180910390fd5b60146104b760a0890160808a01611090565b61ffff1611156104fc5760405162461bcd60e51b815260206004820152601060248201526f546f6f206d616e79204b697474656e7360801b604482015260640161049c565b61050b600a60c08901356110ab565b8210156105515760405162461bcd60e51b81526020600482015260146024820152734d696e2031302520726571206173207374616b6560601b604482015260640161049c565b610564670de0b6b3a76400006014611051565b8760c0013510156105ae5760405162461bcd60e51b81526020600482015260146024820152734d696e2024323020726571206173207374616b6560601b604482015260640161049c565b6001600160a01b0383166323b872dd336105d06101408b016101208c01610e90565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018590526064016020604051808303816000875af1158015610624573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064891906110cd565b6106895760405162461bcd60e51b815260206004820152601260248201527112dc99585d1bdc881cdd185ad94819985a5b60721b604482015260640161049c565b60085460ff1661069c6020890189610ec3565b60ff1611156106dc5760405162461bcd60e51b815260206004820152600c60248201526b4665657320746f6f206c6f7760a01b604482015260640161049c565b600854610100900460ff166106f76040890160208a01610ec3565b60ff16111561073b5760405162461bcd60e51b815260206004820152601060248201526f44616f206665657320746f6f206c6f7760801b604482015260640161049c565b600254604051627eeac760e11b8152336004820152602481018390526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ad9190611038565b116107f25760405162461bcd60e51b815260206004820152601560248201527412dc99585d1bdc881b9bdd081c195c9b5a5d1d1959605a1b604482015260640161049c565b600254604051627eeac760e11b8152336004820152600560248201526001600160a01b039091169062fdd58e90604401602060405180830381865afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108639190611038565b1561089c5760405162461bcd60e51b81526020600482015260096024820152682420a925a7a72722a760b91b604482015260640161049c565b600254604051638f3bfe2f60e01b81526001600160a01b03868116600483015290911690638f3bfe2f906024016020604051808303816000875af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c91906110cd565b6109515760405162461bcd60e51b81526020600482015260166024820152752737ba1030b13632903a379039b2ba1036b4b73a32b960511b604482015260640161049c565b60405163b246b1dd60e01b81526001600160a01b0385169063b246b1dd90610986908a908a906001903390899060040161111c565b600060405180830381600087803b1580156109a057600080fd5b505af11580156109b4573d6000803e3d6000fd5b505033600081815260066020908152604080832080546001810182559084529282902090920180546001600160a01b0319166001600160a01b038b16908117909155825190815260e08d0135918101919091529193507f6db0c3a1a19b6bdab85bf650437b7757c8359bcadf2a70ba11b9b68e774e82ff92500160405180910390a26003546040516001600160a01b038681166024830152600092169060440160408051601f198184030181529181526020820180516001600160e01b0316638d1e179b60e01b17905251610a899190611277565b6000604051808303816000865af19150503d8060008114610ac6576040519150601f19603f3d011682016040523d82523d6000602084013e610acb565b606091505b5050905080610b1c5760405162461bcd60e51b815260206004820181905260248201527f4e6f742061626c6520746f20736574204b69747479506172747920726f6c6521604482015260640161049c565b6005546040516336c1d86560e21b81526001600160a01b0387811660048301529091169063db07619490602401600060405180830381600087803b158015610b6357600080fd5b505af1158015610b77573d6000803e3d6000fd5b50969a9950505050505050505050565b6001600160a01b038116600090815260066020908152604091829020805483518184028101840190945280845260609392830182828015610bf157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610bd3575b50505050509050919050565b6008546201000090046001600160a01b03163314610c1a57600080fd5b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408084015160038054841691851691909117905560608401516004805484169185169190911790556080840151600580549093169316929092179055517f40386e97635538c75f9e248c3e11389fd726f2222b7bf6ec239e1f02529e47b090600090a150565b6008546201000090046001600160a01b03163314610cd357600080fd5b6008805460ff9092166101000261ff0019909216919091179055565b600054610100900460ff16610d0a5760005460ff1615610d0e565b303b155b610d715760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049c565b600054610100900460ff16158015610d93576000805461ffff19166101011790555b60088054606461ff01600160b01b0319909116620100006001600160a01b0386160260ff1916171761ff0019166164001790558015610dd8576000805461ff00191690555b5050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116610e745760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161049c565b919050565b80356001600160a01b0381168114610e7457600080fd5b600060208284031215610ea257600080fd5b610eab82610e79565b9392505050565b803560ff81168114610e7457600080fd5b600060208284031215610ed557600080fd5b610eab82610eb2565b60008060408385031215610ef157600080fd5b610efa83610e79565b946020939093013593505050565b6000808284036101a0811215610f1d57600080fd5b61016080821215610f2d57600080fd5b849350604061015f1983011215610f4357600080fd5b92959390920193505050565b6020808252825182820181905260009190848201906040850190845b81811015610f905783516001600160a01b031683529284019291840191600101610f6b565b50909695505050505050565b600060a08284031215610fae57600080fd5b60405160a0810181811067ffffffffffffffff82111715610fdf57634e487b7160e01b600052604160045260246000fd5b604052610feb83610e79565b8152610ff960208401610e79565b602082015261100a60408401610e79565b604082015261101b60608401610e79565b606082015261102c60808401610e79565b60808201529392505050565b60006020828403121561104a57600080fd5b5051919050565b600081600019048311821515161561107957634e487b7160e01b600052601160045260246000fd5b500290565b803561ffff81168114610e7457600080fd5b6000602082840312156110a257600080fd5b610eab8261107e565b6000826110c857634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156110df57600080fd5b81518015158114610eab57600080fd5b6001600160a01b038061110183610e79565b1683528061111160208401610e79565b166020840152505050565b61028081016111358261112e89610eb2565b60ff169052565b61114160208801610eb2565b60ff16602083015261115560408801610eb2565b60ff16604083015261116960608801610eb2565b60ff16606083015261117d6080880161107e565b61ffff16608083015261119260a0880161107e565b61ffff811660a08401525060c087013560c083015260e087013560e08301526101006111bf818901610e79565b6001600160a01b0316908301526101206111da888201610e79565b6001600160a01b0316908301526101406111f5888201610e79565b6001600160a01b0316908301526112106101608301876110ef565b84546001600160a01b039081166101a0840152600186015481166101c0840152600286015481166101e0840152600386015481166102008401526004860154166102208301526001600160a01b038416610240830152826102608301529695505050505050565b6000825160005b81811015611298576020818601810151858301520161127e565b818111156112a7576000828501525b50919091019291505056fea26469706673582212207f870a994892ab7888be7daa8cb9c5641363446c59eb1e47c9373214a920208264736f6c634300080a0033";

type KittyPartyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KittyPartyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KittyPartyFactory__factory extends ContractFactory {
  constructor(...args: KittyPartyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KittyPartyFactory> {
    return super.deploy(overrides || {}) as Promise<KittyPartyFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KittyPartyFactory {
    return super.attach(address) as KittyPartyFactory;
  }
  connect(signer: Signer): KittyPartyFactory__factory {
    return super.connect(signer) as KittyPartyFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KittyPartyFactoryInterface {
    return new utils.Interface(_abi) as KittyPartyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KittyPartyFactory {
    return new Contract(address, _abi, signerOrProvider) as KittyPartyFactory;
  }
}
